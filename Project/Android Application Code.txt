package com.project.packettracer.Call;

import android.Manifest;
import android.annotation.SuppressLint;

import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;


public class MainActivity extends AppCompatActivity implements ActivityCompat.OnRequestPermissionsResultCallback {

    static boolean PermissionGranted;
    private static final int REQUEST_CALL = 10;
    private static String[] PERMISSIONS_CALL = { Manifest.permission.READ_PHONE_STATE,
            Manifest.permission.CALL_PHONE, Manifest.permission.SEND_SMS, Manifest.permission.READ_SMS };

    Button btnCall, btnExit;
    EditText etCallNumber;
    EditText etPassword;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        PermissionGranted = false;
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        SmsReceiver sr = new SmsReceiver();



        sr.bindListener(new SmsListener() {
            @Override
            public void messageReceived(String messageText) {
                Log.e("Message",messageText);
                //if(SmsReceiver.senderPhoneNo.equalsIgnoreCase("519-781-1075"))
                Toast.makeText(MainActivity.this,messageText.toString(), Toast.LENGTH_SHORT).show();

                Uri gmmIntentUri = Uri.parse("geo:0,0?q=37.7749,-122.4192(Your Packet)");
                Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);
                mapIntent.setPackage("com.google.android.apps.maps");
                startActivity(mapIntent);
            }
        });

        btnCall = findViewById(R.id.btn_dial);
        btnExit = findViewById(R.id.btn_exit);
        etCallNumber = (EditText) findViewById(R.id.et_phone_no);
        final EditText etPassword = (EditText) findViewById(R.id.et_password);

        btnCall.setOnClickListener(new View.OnClickListener()
        {
            @SuppressLint("MissingPermission")
            @Override
            public void onClick(View v)
            {
                String phoneNo = etCallNumber.getText().toString();
                if (PermissionGranted)
                {
                    if (!TextUtils.isEmpty(phoneNo))
                    {
                        String dial = "tel:" + phoneNo;
                        startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(dial)));
                    }
                    else
                    {
                        Toast.makeText(MainActivity.this, "Enter a phone number", Toast.LENGTH_SHORT).show();
                    }
                }
                else
                {
                    Toast.makeText(MainActivity.this, "Go to Settings to set your Permissions !", Toast.LENGTH_SHORT).show();
                }
            }
        });

        btnExit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
                System.exit(0);
            }
        });

    }

    @Override
    protected void onStart() {
        super.onStart();
        requestPermissions(PERMISSIONS_CALL,R.string.msg_permission,REQUEST_CALL);
    }

    private void requestPermissions(String[] permissionsCall, int msg_permission, int requestCode)
    {
//        mErrorString.put(requestCode, msg_permission);
        int permissionCheck = PackageManager.PERMISSION_GRANTED;
        boolean showRequestPermissions = false;


        for(String permission: permissionsCall) {
            permissionCheck = permissionCheck + ContextCompat.checkSelfPermission(this, permission);
            showRequestPermissions = showRequestPermissions || ActivityCompat.shouldShowRequestPermissionRationale(this, permission);
        }

        if (permissionCheck!=PackageManager.PERMISSION_GRANTED)
        {
            if(showRequestPermissions) {
                ActivityCompat.requestPermissions(MainActivity.this, permissionsCall, requestCode);
            } else {
                ActivityCompat.requestPermissions(this, permissionsCall, requestCode);
            }
        }
        else {
            onPermissionsGranted(requestCode);
        }
    }

    public void onPermissionsGranted(int requestCode) {
        //Do anything when permisson granted
        switch(requestCode)
        {
            case REQUEST_CALL:
                PermissionGranted = true;
                Toast.makeText(getApplicationContext(), "Permission granted", Toast.LENGTH_SHORT).show();
                break;
        }
    }

}