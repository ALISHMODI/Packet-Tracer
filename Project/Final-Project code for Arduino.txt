#include <DFRobot_sim808.h>
#include <SoftwareSerial.h>

//Mobile phone number, need to change
#define PHONE_NUMBER "+15195721264" 
#define MESSAGE_LENGTH 160
char message[MESSAGE_LENGTH];
int messageIndex = 0;

char phone[16];
char datetime[24];
//The content of messages sent
//#define MESSAGE  "http://maps.google.com/maps?q=%s,%s"

DFRobot_SIM808 sim808(&Serial);
  
char POSITION_MESSAGE[300];
char lat[12];
char lon[12];

boolean getGPS();
boolean readSMS();
boolean readLocation = false;

  void setup() {
    //mySerial.begin(9600);
    Serial.begin(9600);

   //******** Initialize sim808 module *************
    while(!sim808.init()) {
        delay(1000);
        Serial.print("Sim808 init error\r\n");
    }  
    Serial.println("Sim808 init success");
    //Serial.println("Start to send message ...");

    //******** define phone number and text **********
    //sim808.sendSMS(PHONE_NUMBER,MESSAGE);
  }

void loop() 
{
  
  boolean smsRead = readSMS();
  //boolean isLocationAvailable = false;
  if(smsRead)
  {
    
    while(!getGPS())
    {
      
    }
    
    delay(000);
    sim808.sendSMS(PHONE_NUMBER,POSITION_MESSAGE);
    
    delay(10000);
    readLocation = false;
    }
    sim808.detachGPS();
}
  
boolean readSMS()
{
    boolean smsAvailable = false;
     messageIndex = sim808.isSMSunread();
    Serial.print("messageIndex: ");
    Serial.println(messageIndex);

   //*********** At least, there is one UNREAD SMS ***********
   if (messageIndex > 0) { 
      sim808.readSMS(messageIndex, message, MESSAGE_LENGTH, phone, datetime);
                 
      //***********In order not to full SIM Memory, is better to delete it**********
      sim808.deleteSMS(messageIndex);
      Serial.print("From number: ");
      Serial.println(phone);  
      Serial.print("Datetime: ");
      Serial.println(datetime);        
      Serial.print("Recieved Message: ");
      Serial.println(message);   
      smsAvailable = true;
   }
   return smsAvailable;
}
  
boolean getGPS()
{ 
  while(!sim808.attachGPS())
  {
    Serial.println("Open the GPS power failure");
    delay(1000);
  }
  delay(3000);

  Serial.println("Open the GPS power success");
    
  while(!sim808.getGPS())
  {
    
  }
  
  //delay(3000);
  Serial.print(sim808.GPSdata.year);
  Serial.print("/");
  Serial.print(sim808.GPSdata.month);
  Serial.print("/");
  Serial.print(sim808.GPSdata.day);
  Serial.print(" ");
  Serial.print(sim808.GPSdata.hour);
  Serial.print(":");
  Serial.print(sim808.GPSdata.minute);
  Serial.print(":");
  Serial.print(sim808.GPSdata.second);
  Serial.print(":");
  Serial.println(sim808.GPSdata.centisecond);
  Serial.print("latitude :");
  Serial.println(sim808.GPSdata.lat);
  Serial.print("longitude :");
  Serial.println(sim808.GPSdata.lon);
  Serial.print("speed_kph :");
  Serial.println(sim808.GPSdata.speed_kph);
  Serial.print("heading :");
  Serial.println(sim808.GPSdata.heading);
  Serial.println();

  float la = sim808.GPSdata.lat;
  float lo = sim808.GPSdata.lon;
  float ws = sim808.GPSdata.speed_kph;

  dtostrf(la, 4, 6, lat); //put float value of la into char array of lat. 4 = number of digits before decimal sign. 6 = number of digits after the decimal sign.
  dtostrf(lo, 4, 6, lon); //put float value of lo into char array of lon
  
  sprintf(POSITION_MESSAGE, "http://maps.google.com/maps?q=%s,%s", lat, lon);
  Serial.println(POSITION_MESSAGE);
  delay(3000);
  readLocation = true;
  //sim808.sendSMS(PHONE_NUMBER,POSITION_MESSAGE);

return readLocation;  
}